{
  "manifest": {
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "http://blog.izs.me"
    },
    "name": "graceful-fs",
    "description": "A drop-in replacement for fs, making various improvements.",
    "version": "3.0.12",
    "repository": {
      "type": "git",
      "url": "git://github.com/isaacs/node-graceful-fs.git"
    },
    "main": "graceful-fs.js",
    "engines": {
      "node": ">=0.4.0"
    },
    "scripts": {
      "test": "tap test/*.js"
    },
    "keywords": [
      "fs",
      "module",
      "reading",
      "retry",
      "retries",
      "queue",
      "error",
      "errors",
      "handling",
      "EMFILE",
      "EAGAIN",
      "EINVAL",
      "EPERM",
      "EACCESS"
    ],
    "license": "ISC",
    "devDependencies": {
      "mkdirp": "^0.5.0",
      "rimraf": "^2.2.8",
      "tap": "^1.2.0"
    },
    "dependencies": {
      "natives": "^1.1.3"
    },
    "publishConfig": {
      "tag": "old"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-graceful-fs-3.0.12-0034947ce9ed695ec8ab0b854bc919e82b1ffaef-integrity\\node_modules\\graceful-fs\\package.json",
    "readmeFilename": "README.md",
    "readme": "# graceful-fs\n\ngraceful-fs functions as a drop-in replacement for the fs module,\nmaking various improvements.\n\nThe improvements are meant to normalize behavior across different\nplatforms and environments, and to make filesystem access more\nresilient to errors.\n\n## Improvements over [fs module](http://api.nodejs.org/fs.html)\n\ngraceful-fs:\n\n* Queues up `open` and `readdir` calls, and retries them once\n  something closes if there is an EMFILE error from too many file\n  descriptors.\n* fixes `lchmod` for Node versions prior to 0.6.2.\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\n  `lchown` if the user isn't root.\n* makes `lchmod` and `lchown` become noops, if not available.\n* retries reading a file if `read` results in EAGAIN error.\n\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\nor `EPERM` error occurs, likely because antivirus software has locked\nthe directory.\n\n## USAGE\n\n```javascript\n// use just like fs\nvar fs = require('graceful-fs')\n\n// now go and do stuff with it...\nfs.readFileSync('some-file-or-whatever')\n```\n",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-3.0.12.tgz#0034947ce9ed695ec8ab0b854bc919e82b1ffaef",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-3.0.12.tgz",
    "hash": "0034947ce9ed695ec8ab0b854bc919e82b1ffaef",
    "integrity": "sha512-J55gaCS4iTTJfTXIxSVw3EMQckcqkpdRv3IR7gu6sq0+tbC363Zx6KH/SEwXASK9JRbhyZmVjJEVJIOxYsB3Qg==",
    "registry": "npm",
    "packageName": "graceful-fs",
    "cacheIntegrity": "sha512-J55gaCS4iTTJfTXIxSVw3EMQckcqkpdRv3IR7gu6sq0+tbC363Zx6KH/SEwXASK9JRbhyZmVjJEVJIOxYsB3Qg== sha1-ADSUfOntaV7IqwuFS8kZ6Csf+u8="
  },
  "registry": "npm",
  "hash": "0034947ce9ed695ec8ab0b854bc919e82b1ffaef"
}