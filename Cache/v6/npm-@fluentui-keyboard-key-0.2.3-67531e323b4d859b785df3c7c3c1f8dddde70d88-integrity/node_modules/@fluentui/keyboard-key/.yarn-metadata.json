{
  "manifest": {
    "name": "@fluentui/keyboard-key",
    "version": "0.2.3",
    "description": "A simple utility for determining the KeyboardEvent.key property from a keyboard event.",
    "main": "lib-commonjs/index.js",
    "module": "lib/index.js",
    "typings": "lib/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/microsoft/fluentui"
    },
    "license": "MIT",
    "scripts": {
      "build": "just-scripts build",
      "clean": "just-scripts clean",
      "code-style": "just-scripts code-style",
      "just": "just-scripts",
      "lint": "just-scripts lint",
      "start-test": "just-scripts jest-watch",
      "test": "just-scripts test",
      "update-api": "just-scripts update-api"
    },
    "devDependencies": {
      "@types/jest": "~24.9.0",
      "@uifabric/build": "^7.0.0",
      "@uifabric/tslint-rules": "^7.2.2"
    },
    "dependencies": {
      "tslib": "^1.10.0"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-@fluentui-keyboard-key-0.2.3-67531e323b4d859b785df3c7c3c1f8dddde70d88-integrity\\node_modules\\@fluentui\\keyboard-key\\package.json",
    "readmeFilename": "README.md",
    "readme": "# @fluentui/keyboard-key\n\nA simple utility for determining the `KeyboardEvent.key` property from a keyboard event.\n\n<!-- toc -->\n\n- [Install](#install)\n- [Usage](#usage)\n  - [getKey()](#getkey)\n  - [getCode()](#getcode)\n- [Why?](#why)\n- [Locale Caveat](#locale-caveat)\n\n<!-- tocstop -->\n\n## Install\n\n```\nyarn add keyboard-key\n\n# or\n\nnpm install keyboard-key\n```\n\n## Usage\n\n### getKey()\n\nGet the `key` property value from an event.\n\n```js\ndocument.addEventListener('keydown', event => {\n  const key = keyboardKey.getKey(event);\n\n  switch (key) {\n    case 'Escape':\n      // handle escape key\n      break;\n    default:\n      break;\n  }\n});\n```\n\n> See [MDN][2] or the source for a full list of `key` values.\n\n### getCode()\n\nYou can also get the normalized `keyCode` from an event. `@fluentui/keyboard-key` includes a hash of `key` names to `keyCode`s for easy comparisons:\n\n```js\ndocument.addEventListener('keydown', event => {\n  const code = getCode(event);\n\n  switch (code) {\n    case keyboardKey.Escape: // 27\n      // handle escape key\n      break;\n    default:\n      break;\n  }\n});\n```\n\n## Why?\n\nMost previous key identifying KeyboardEvent properties have been pressed have been deprecated in favor of `Keyboard.key`.\n\n:-1: `KeyboardEvent.char`\n:-1: `KeyboardEvent.charCode`\n:-1: `KeyboardEvent.keyCode`\n:-1: `KeyboardEvent.keyIdentifier`\n:-1: `KeyboardEvent.keyLocation`\n:-1: `KeyboardEvent.which`\n\n:+1: `KeyboardEvent.key`\n\nUnfortunately, `KeyboardEvent.key` does not yet have full [browser support][3]. Leaving the browsers without a reliable property for identifying keyboard event keys.\n\n## Locale Caveat\n\nThis utility interprets use of the shift key when inferring event `key` values. Example, an event describing <kbd>shift</kbd>+<kbd>/</kbd> would result in a `key` value of <kbd>?</kbd>. This logic assumes an `en-US` locale keyboard layout. This will **not work** if you are using a different locale such as a German layout where <kbd>/</kbd> is <kbd>shift</kbd>+<kbd>7</kbd>.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n[2]: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n[3]: http://caniuse.com/#feat=keyboardevent-key\n",
    "licenseText": "@fluentui/keyboard-key\n\nCopyright (c) Microsoft Corporation\n\nAll rights reserved.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"\"Software\"\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nNote: Usage of the fonts and icons referenced in Fluent UI React is subject to the terms listed at https://aka.ms/fluentui-assets-license\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@fluentui/keyboard-key/-/keyboard-key-0.2.3.tgz#67531e323b4d859b785df3c7c3c1f8dddde70d88",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@fluentui/keyboard-key/-/keyboard-key-0.2.3.tgz",
    "hash": "67531e323b4d859b785df3c7c3c1f8dddde70d88",
    "integrity": "sha512-q8Pgg5MbW9g5KRnqL2+g7ReYr7W7NGbj4otIeLgIE9tdEQfYyN6+IQAyTtngLUNQdh0bLIFduXAFrrSeGElUWg==",
    "registry": "npm",
    "packageName": "@fluentui/keyboard-key",
    "cacheIntegrity": "sha512-q8Pgg5MbW9g5KRnqL2+g7ReYr7W7NGbj4otIeLgIE9tdEQfYyN6+IQAyTtngLUNQdh0bLIFduXAFrrSeGElUWg== sha1-Z1MeMjtNhZt4XfPHw8H43d3nDYg="
  },
  "registry": "npm",
  "hash": "67531e323b4d859b785df3c7c3c1f8dddde70d88"
}