{
  "manifest": {
    "name": "paged-request",
    "description": "Simplified requests for paged (paginated) content.",
    "version": "2.0.1",
    "homepage": "https://github.com/jonschlinkert/paged-request",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/paged-request.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/paged-request/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "mocha"
    },
    "devDependencies": {
      "gulp-format-md": "^1.0.0",
      "mocha": "^5.2.0"
    },
    "keywords": [
      "get",
      "paged",
      "paginated",
      "request"
    ],
    "verb": {
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "related": {
        "list": [
          "gists",
          "github-base",
          "repos"
        ]
      },
      "lint": {
        "reflinks": true
      },
      "reflinks": [
        "axios",
        "needle"
      ]
    },
    "dependencies": {
      "axios": "^0.18.0"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-paged-request-2.0.1-91164f042231feb68643542d2530476a518ff4de-integrity\\node_modules\\paged-request\\package.json",
    "readmeFilename": "README.md",
    "readme": "# paged-request [![NPM version](https://img.shields.io/npm/v/paged-request.svg?style=flat)](https://www.npmjs.com/package/paged-request) [![NPM monthly downloads](https://img.shields.io/npm/dm/paged-request.svg?style=flat)](https://npmjs.org/package/paged-request) [![NPM total downloads](https://img.shields.io/npm/dt/paged-request.svg?style=flat)](https://npmjs.org/package/paged-request) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/paged-request.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/paged-request)\n\n> Simplified requests for paged (paginated) content.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save paged-request\n```\n\n## Heads up!\n\nSee the [release notes](#release-notes) for information about changes made in v2.0.\n\n## Usage\n\nThis library recursively calls [needle's](https://github.com/tomas/needle#needlemethod-url-data-options-callback--20x) `.get` method as long as the user-provided `next()` function returns a string (the next url to get). See [an example](#example).\n\n**Example**\n\n```js\nconst request = require('paged-request');\n\nrequest(url, options, next)\n  .then(acc => console.log(acc.pages.length))\n  .catch(console.error);\n```\n\n### Params\n\n* `url` **{string}** - (required) the initial url to get\n* `options` **{object}** - (optional) options object to pass to [needle](https://github.com/tomas/needle)\n* `next` **{function}** - (required) function that returns the next url to get, a promise or undefined.\n\n### `next` function params\n\n* `url` **{string}** - the original (base) user-provided url\n* `resp` **{object}** - [needle](https://github.com/tomas/needle) response object\n* `acc` **{object}** - accumulator object with the following properties:\n  - `options` **{object}** - user-provided options object\n  - `pages` **{array}** - array of responses\n  - `urls` **{array}** - array of requested urls\n\nThe `next` function should return a string (the next url to get), promise or undefined.\n\n## Example\n\nThe following example shows how to loop over pages of `CSS` posts on [smashingmagazine.com](https://www.smashingmagazine.com/category/css) (an arbitrary example, but they have great content!).\n\n```js\nconst request = require('paged-request');\n\nasync function next(url, resp, acc) {\n  // do stuff to check response first if necessary\n  const regex = /href=\"\\/.*?\\/(\\d+)\\/\"/;\n  const num = (regex.exec(resp.data) || [])[1];\n\n  if (num && /^[0-9]+$/.test(num) && +num <= n) {\n    // use the \"original\" url to avoid having to reparse\n    // and recreate the url each time\n    return `${acc.orig}/page/${num}/`;\n  }\n}\n\nrequest('https://www.smashingmagazine.com/category/css', {}, next)\n  .then(acc => console.log(acc.pages.length))\n  .catch(console.error);\n```\n\n## Release notes\n\n### v2.0\n\n* renamed `.hrefs` to `.urls` in response object\n* now using [axios](https://github.com/axios/axios) instead of [needle](https://github.com/tomas/needle). Please see the axios documentation for API information.\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [gists](https://www.npmjs.com/package/gists): Methods for working with the GitHub Gist API. Node.js/JavaScript | [homepage](https://github.com/jonschlinkert/gists \"Methods for working with the GitHub Gist API. Node.js/JavaScript\")\n* [github-base](https://www.npmjs.com/package/github-base): JavaScript wrapper that greatly simplifies working with GitHub's API. | [homepage](https://github.com/jonschlinkert/github-base \"JavaScript wrapper that greatly simplifies working with GitHub's API.\")\n* [repos](https://www.npmjs.com/package/repos): List all repositories for one or more users or orgs. | [homepage](https://github.com/jonschlinkert/repos \"List all repositories for one or more users or orgs.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 8 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 8 | [doowb](https://github.com/doowb) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright Â© 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on May 29, 2018._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018, Jon Schlinkert.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/paged-request/-/paged-request-2.0.1.tgz#91164f042231feb68643542d2530476a518ff4de",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/paged-request/-/paged-request-2.0.1.tgz",
    "hash": "91164f042231feb68643542d2530476a518ff4de",
    "integrity": "sha512-C0bB/PFk9rQskD1YEiz7uuchzqKDQGgdsEHN1ahify0UUWzgmMK4NDG9fhlQg2waogmNFwEvEeHfMRvJySpdVw==",
    "registry": "npm",
    "packageName": "paged-request",
    "cacheIntegrity": "sha512-C0bB/PFk9rQskD1YEiz7uuchzqKDQGgdsEHN1ahify0UUWzgmMK4NDG9fhlQg2waogmNFwEvEeHfMRvJySpdVw== sha1-kRZPBCIx/raGQ1QtJTBHalGP9N4="
  },
  "registry": "npm",
  "hash": "91164f042231feb68643542d2530476a518ff4de"
}