{
  "manifest": {
    "name": "p-some",
    "version": "4.1.0",
    "description": "Wait for a specified number of promises to be fulfilled",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/p-some.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "promise",
      "some",
      "resolved",
      "wait",
      "collection",
      "iterable",
      "iterator",
      "race",
      "fulfilled",
      "fastest",
      "async",
      "await",
      "promises",
      "bluebird"
    ],
    "dependencies": {
      "aggregate-error": "^3.0.0",
      "p-cancelable": "^2.0.0"
    },
    "devDependencies": {
      "ava": "^1.4.1",
      "delay": "^4.1.0",
      "tsd": "^0.7.2",
      "xo": "^0.24.0"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-p-some-4.1.0-28e73bc1e0d62db54c2ed513acd03acba30d5c04-integrity\\node_modules\\p-some\\package.json",
    "readmeFilename": "readme.md",
    "readme": "# p-some [![Build Status](https://travis-ci.org/sindresorhus/p-some.svg?branch=master)](https://travis-ci.org/sindresorhus/p-some)\n\n> Wait for a specified number of promises to be fulfilled\n\nUseful when you need the fastest of multiple promises.\n\n\n## Install\n\n```\n$ npm install p-some\n```\n\n\n## Usage\n\nChecks 4 websites and logs the 2 fastest.\n\n```js\nconst got = require('got');\nconst pSome = require('p-some');\n\n(async () => {\n\tconst input = [\n\t\tgot.head('github.com').then(() => 'github'),\n\t\tgot.head('google.com').then(() => 'google'),\n\t\tgot.head('twitter.com').then(() => 'twitter'),\n\t\tgot.head('medium.com').then(() => 'medium')\n\t];\n\n\tconst [first, second] = await pSome(input, {count: 2});\n\n\tconsole.log(first, second);\n\t//=> 'google twitter'\n})();\n```\n\n\n## API\n\n### pSome(input, options)\n\nReturns a [cancelable `Promise`](https://github.com/sindresorhus/p-cancelable) that is fulfilled when `count` promises from `input` are fulfilled. The fulfilled value is an `Array` of the values from the `input` promises in the order they were fulfilled. If it becomes impossible to satisfy `count`, for example, too many promises rejected, it will reject with an [`AggregateError`](https://github.com/sindresorhus/aggregate-error) error.\n\nIf you pass in cancelable promises, specifically promises with a `.cancel()` method, that method will be called for the promises that are still unfulfilled when the returned `Promise` is either fulfilled or rejected.\n\n#### input\n\nType: `Iterable<Promise | unknown>`\n\nAn `Iterable` collection of promises/values to wait for.\n\n#### options\n\nType: `Object`\n\n##### count\n\n*Required*<br>\nType: `number`<br>\nMinimum: `1`\n\nNumber of promises from `input` that have to be fulfilled until the returned promise is fulfilled.\n\n##### filter\n\nType: `Function`\n\nReceives the value resolved by the promise. Used to filter out values that doesn't satisfy a condition.\n\n### pSome.AggregateError\n\nExposed for instance checking.\n\n\n## Related\n\n- [p-any](https://github.com/sindresorhus/p-any) - Wait for any promise to be fulfilled\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/p-some/-/p-some-4.1.0.tgz#28e73bc1e0d62db54c2ed513acd03acba30d5c04",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/p-some/-/p-some-4.1.0.tgz",
    "hash": "28e73bc1e0d62db54c2ed513acd03acba30d5c04",
    "integrity": "sha512-MF/HIbq6GeBqTrTIl5OJubzkGU+qfFhAFi0gnTAK6rgEIJIknEiABHOTtQu4e6JiXjIwuMPMUFQzyHh5QjCl1g==",
    "registry": "npm",
    "packageName": "p-some",
    "cacheIntegrity": "sha512-MF/HIbq6GeBqTrTIl5OJubzkGU+qfFhAFi0gnTAK6rgEIJIknEiABHOTtQu4e6JiXjIwuMPMUFQzyHh5QjCl1g== sha1-KOc7weDWLbVMLtUTrNA6y6MNXAQ="
  },
  "registry": "npm",
  "hash": "28e73bc1e0d62db54c2ed513acd03acba30d5c04"
}