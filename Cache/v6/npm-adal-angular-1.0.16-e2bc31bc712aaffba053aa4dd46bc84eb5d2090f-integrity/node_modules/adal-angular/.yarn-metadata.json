{
  "manifest": {
    "name": "adal-angular",
    "author": {
      "name": "Microsoft",
      "email": "nugetaad@microsoft.com",
      "url": "https://www.microsoft.com"
    },
    "license": "Apache-2.0",
    "repository": {
      "type": "git",
      "url": "https://github.com/AzureAD/azure-activedirectory-library-for-js.git"
    },
    "version": "1.0.16",
    "description": "Windows Azure Active Directory Client Library for js",
    "keywords": [
      "implicit",
      "js",
      "AAD",
      "adal",
      "oauth"
    ],
    "main": "./lib/adal.js",
    "engines": {
      "node": ">=0.8.0"
    },
    "dependencies": {},
    "devDependencies": {
      "jasmine-node": "~1.14.5",
      "jshint": "*",
      "grunt": "^0.4.5",
      "grunt-cli": "^0.1.13",
      "grunt-jsdoc": "~0.5.7",
      "grunt-contrib-clean": "~0.5.0",
      "grunt-contrib-concat": "^0.3.0",
      "grunt-contrib-connect": "^0.7.1",
      "grunt-contrib-copy": "~0.4.1",
      "grunt-contrib-jshint": "^0.10.0",
      "grunt-contrib-uglify": "~0.6.0",
      "grunt-contrib-watch": "~0.2.0",
      "grunt-karma": "^0.9.x",
      "atob": "~1.1.2",
      "karma-chrome-launcher": "^0.1.5",
      "karma": "^0.12.24",
      "karma-jasmine": "^0.1.5",
      "bower": "^1.3.3",
      "grunt-jasmine-node": "~0.2.1"
    },
    "scripts": {
      "test": "jasmine-node tests/unit/spec"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-adal-angular-1.0.16-e2bc31bc712aaffba053aa4dd46bc84eb5d2090f-integrity\\node_modules\\adal-angular\\package.json",
    "readmeFilename": "README.md",
    "readme": "Active Directory Authentication Library (ADAL) for JavaScript\n====================================\n[![Build Status](https://travis-ci.org/AzureAD/azure-activedirectory-library-for-js.svg?branch=master)](https://travis-ci.org/AzureAD/azure-activedirectory-library-for-js)\n\nActive Directory Authentication Library for JavaScript (ADAL JS) helps you to use Azure AD for handling authentication in your single page applications.\nThis library is optimized for working together with AngularJS.\n\n## Versions\nCurrent version - 1.0.16  \nMinimum recommended version - 1.0.11  \nYou can find the changes for each version in the [change log](https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/changelog.txt).\n\n## Samples and Documentation\n\n[We provide a full suite of sample applications and documentation on GitHub](https://github.com/azure-samples?query=active-directory) to help you get started with learning the Azure Identity system. This includes tutorials for native clients such as Windows, Windows Phone, iOS, OSX, Android, and Linux; and a detailed guide to registering your app with Azure Active Directory. We also provide full walkthroughs for authentication flows such as OAuth2, OpenID Connect, Graph API, and other awesome features.\n \n\n## Community Help and Support\n\nWe leverage [Stack Overflow](http://stackoverflow.com/) to work with the community on supporting Azure Active Directory and its SDKs, including this one! We highly recommend you ask your questions on Stack Overflow (we're all on there!) Also browser existing issues to see if someone has had your question before. \n\nWe recommend you use the \"adal\" tag so we can see it! Here is the latest Q&A on Stack Overflow for ADAL: [http://stackoverflow.com/questions/tagged/adal](http://stackoverflow.com/questions/tagged/adal)\n\n## Security Reporting\n\nIf you find a security issue with our libraries or services please report it to [secure@microsoft.com](mailto:secure@microsoft.com) with as much detail as possible. Your submission may be eligible for a bounty through the [Microsoft Bounty](http://aka.ms/bugbounty) program. Please do not post security issues to GitHub Issues or any other public site. We will contact you shortly upon receiving the information. We encourage you to get notifications of when security incidents occur by visiting [this page](https://technet.microsoft.com/en-us/security/dd252948) and subscribing to Security Advisory Alerts.\n\n## The Library\n\nThis is a GA released version. The current version is **1.0.16**.\n\nYou have multiple ways of getting ADAL JS:\n\nVia NPM:\n\n    npm install adal-angular\n\nVia CDN:\n\n    <!-- Latest compiled and minified JavaScript -->\n    <script src=\"https://secure.aadcdn.microsoftonline-p.com/lib/1.0.16/js/adal.min.js\"></script>\n    <script src=\"https://secure.aadcdn.microsoftonline-p.com/lib/1.0.16/js/adal-angular.min.js\"></script>\n\nCDN will be updated to latest version 1.0.16.\n\nVia Bower:\n\n    $ bower install adal-angular\n\nThe adal.js source is [here](https://github.com/AzureAD/azure-activedirectory-library-for-js/tree/master/lib/adal.js).\nThe adal-angular.js source is [here](https://github.com/AzureAD/azure-activedirectory-library-for-js/tree/master/lib/adal-angular.js).\n## Samples, tests and documentation\n\nFor a sample demonstrating basic usage of ADAL JS please refer to [this repo](https://github.com/AzureADSamples/SinglePageApp-DotNet).\n\nCORS API [sample ](https://github.com/AzureADSamples/SinglePageApp-WebAPI-AngularJS-DotNet).\n\n**To run tests**\n\n    npm install\n    bower install\n    npm test\n    // angular tests\n    karma start\n\nKarma as test runner:\nYou need to install the karma command line.\n\n    npm install -g karma\n    npm install -g karma-cli\n\n**Logging**\n\nLog levels are mapped as:\n\n    0: Error\n    1: Warning\n    2: Info\n    3: Verbose\n\nYou can add the code below to app.js to turn on logging. Implement the `log` method depending on how you want to redirect logs.\n\n    Logging = {\n        level: 3,\n        log: function (message) {\n            console.log(message);\n        }\n    };\n    \n**documentation generation**\nInstall grunt; call\n\n    grunt doc\n\n\n# Getting Started\n**Quick usage guide**\n\nBelow you can find a quick reference for the most common operations you need to perform to use ADAL JS.\n\n1- Include references to angular.js libraries, adal.js, adal-angular.js in your main app page. The ADAL should be included after Angular, but before your application scripts as shown below.\n\n2- Include a reference to the ADAL module in your app module.\n```js\nvar app = angular.module('demoApp', ['ngRoute', 'AdalAngular']);\n```\n3- ***When HTML5 mode is configured***, ensure the $locationProvider hashPrefix is set\n```js\n\t// using '!' as the hashPrefix but can be a character of your choosing\n\tapp.config(['$locationProvider', function($locationProvider) {\n\t\t$locationProvider.html5Mode(true).hashPrefix('!');\n\t}]);\n```\n\nWithout the hashPrefix set, the AAD login will loop indefinitely as the callback URL from AAD (in the form of, {yourBaseUrl}/#{AADTokenAndState}) will be rewritten to remove the '#' causing the token parsing to fail and login sequence to occur again.\n\n4- Initialize ADAL with the AAD app coordinates at app config time. The minimum required object to initialize ADAL is:\n```js\nadalAuthenticationServiceProvider.init({\n    // clientId is the identifier assigned to your app by Azure Active Directory.\n    clientId: \"e9a5a8b6-8af7-4719-9821-0deef255f68e\" \n})\n```\n\nA single-tenant configuration, with CORS, looks like this:\n```js\n// endpoint to resource mapping(optional)\n    var endpoints = {\n        \"https://yourhost/api\": \"b6a68585-5287-45b2-ba82-383ba1f60932\",\n    };\nadalAuthenticationServiceProvider.init(\n        {\n            // Config to specify endpoints and similar for your app\n            tenant: \"52d4b072-9470-49fb-8721-bc3a1c9912a1\", // Optional by default, it sends common\n            clientId: \"e9a5a8b6-8af7-4719-9821-0deef255f68e\", // Required\n            //localLoginUrl: \"/login\",  // optional\n            //redirectUri : \"your site\", optional\n            endpoints: endpoints  // If you need to send CORS api requests.\n        },\n        $httpProvider   // pass http provider to inject request interceptor to attach tokens\n        );\n```\n\n5- Define which routes you want to secure via ADAL - by adding `requireADLogin: true` to their definition\n```js\n$routeProvider.\n    when(\"/todoList\", {\n        controller: \"todoListController\",\n        templateUrl: \"/App/Views/todoList.html\",\n        requireADLogin: true\n    });\n\n```\n6- Any service invocation code you might have will remain unchanged. ADAL's interceptor will automatically add tokens for every outgoing call. \n\nAnonymous endpoints, introduced in version 1.0.10, is an array of values that will be ignored by the ADAL route/state change handlers. ADAL will not attach a token to outgoing requests that have these keywords or URI. Routes that *do not* specify the ```requireADLogin=true``` property are added to the ```anonymousEndpoints``` array automatically. \n\n***Optional***\n7- If you so choose, in addition (or substitution) to route level protection you can add explicit login/logout UX elements. Furthermore, you can access properties of the currently signed in user directly form JavaScript (via userInfo and userInfo.profile).\nThe userInfo.profile property provides access to the claims in the ID token received from AAD. The claims can be used by the application for validation, to identify the subject's directory tenant, and so on. The complete list of claims with a brief description of each value is here, [Claims in Azure AD Security Tokens](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-authentication-scenarios):\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Angular Adal Sample</title>\n</head>\n<body ng-app=\"adalDemo\" ng-controller=\"homeController\" ng-init=\"hmCtl.init()\">\n    <a href=\"#\">Home</a>\n    <a href=\"#/todoList\">ToDo List</a>\n\n\n    <!--These links are added to manage login/logout-->\n    <div data-ng-model=\"userInfo\">\n        <span data-ng-hide=\"!userInfo.isAuthenticated\">Welcome {{userInfo.userName}} </span>\n        <button data-ng-hide=\"!userInfo.isAuthenticated\" data-ng-click=\"logout()\">Logout</button>\n        <button data-ng-hide=\"userInfo.isAuthenticated\" data-ng-click=\"login()\">Login</button>\n\n        <div>\n            {{userInfo.loginError}}\n        </div>\n        <div>\n            {{testMessage}}\n        </div>\n    </div>\n    <div ng-view>\n        Your view will appear here.\n    </div>\n\n    <script src=\"/Scripts/angular.min.js\"></script>\n    <script src=\"/Scripts/angular-route.min.js\"></script>\n    <script src=\"/Scripts/adal.js\"></script>\n    <script src=\"/Scripts/adal-angular.js\"></script>\n    <script src=\"App/Scripts/app.js\"></script>\n    <script src=\"App/Scripts/homeController.js\"></script>\n    <script src=\"App/Scripts/todoDetailController.js\"></script>\n    <script src=\"App/Scripts/todoListController.js\"></script>\n    <script src=\"App/Scripts/todoService.js\"></script>\n</body>\n</html>\n```\n7- You have full control on how to trigger sign in, sign out and how to deal with errors:\n\n```js\n'use strict';\napp.controller('homeController', ['$scope', '$location', 'adalAuthenticationService', function ($scope, $location, adalAuthenticationService) {\n    // this is referencing adal module to do login\n\n    //userInfo is defined at the $rootscope with adalAngular module\n    $scope.testMessage = \"\";\n    $scope.init = function () {\n        $scope.testMessage = \"\";\n    };\n\n    $scope.logout = function () {\n        adalAuthenticationService.logOut();\n    };\n\n    $scope.login = function () {\n        adalAuthenticationService.login();\n    };\n\n    // optional\n    $scope.$on(\"adal:loginSuccess\", function () {\n        $scope.testMessage = \"loginSuccess\";\n    });\n\n    // optional\n    $scope.$on(\"adal:loginFailure\", function () {\n        $scope.testMessage = \"loginFailure\";\n        $location.path(\"/login\");\n    });\n\n    // optional\n    $scope.$on(\"adal:notAuthorized\", function (event, rejection, forResource) {\n        $scope.testMessage = \"It is not Authorized for resource:\" + forResource;\n    });\n\n}]);\n\n\n```\n\n### Multi-Tenant\n\nBy default, you have multi-tenant support. ADAL will set tenant to 'common', if it is not specified in the config. This allows any Microsoft account to authenticate to your application. If you are not interested in multi-tenant behavior, you will need to set the ```tenant``` property as shown above.\n\nIf you allow multi-tenant authentication, and you do not wish to allow all Microsoft account users to use your application, you must provide your own method of filtering the token issuers to only those tenants who are allowed to login.\n\n### Cache Location\nDefault storage location is sessionStorage. You can specify localStorage in the config as well.\n\n```js\nadalAuthenticationServiceProvider.init(\n        {\n            // Config to specify endpoints and similar for your app\n            clientId: 'cb68f72f...',\n            cacheLocation: 'localStorage' // optional cache location default is sessionStorage\n        },\n        $httpProvider   // pass http provider to inject request interceptor to attach tokens\n        );\n```\n\n### Security\nTokens are accessible from javascript since ADAL.JS is using HTML5 storage. Default storage option is sessionStorage, which keeps the tokens per session. You should ask user to login again for important operations on your app.\nYou should protect your site for XSS. Please check the article here: [https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet](https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet)\n\n\n### CORS API usage and IE\nADAL will get access token for given CORS API endpoints in the config. Access token is requested using Iframe. Iframe needs to access the cookies for the same domain that you did the initial sign in. IE does not allow to access cookies in IFrame for localhost. Your url needs to be fully qualified domain i.e http://yoursite.azurewebsites.com. Chrome does not have this restriction.\n\nTo make CORS API call, you need to specify endpoints in the config for your CORS API. Your service will be similar to this to make the call from JS. In your API project, you need to enable CORS API requests to receive flight requests. You can check the sample for CORS API [sample](https://github.com/AzureADSamples/SinglePageApp-WebAPI-AngularJS-DotNet).\n\n```js\n'use strict';\napp.factory('contactService', ['$http', function ($http) {\n    var serviceFactory = {};\n\n    var _getItems = function () {\n        $http.defaults.useXDomain = true;\n        delete $http.defaults.headers.common['X-Requested-With'];\n        return $http.get('http://adaljscors.azurewebsites.net/api/contacts');\n    };\n\n    serviceFactory.getItems = _getItems;\n\n    return serviceFactory;\n}]);\n```\n\nYou can read extended blogs for CORS API related to learn about Office365 usage.\n\nAndrew's related to CORS and Office365 usage\n\nhttp://www.andrewconnell.com/blog/adal-js-cors-with-o365-apis-files-sharepoint\n\nVittorio's blog\n\nhttp://www.cloudidentity.com/blog/2015/02/19/introducing-adal-js-v1/\nhttp://www.cloudidentity.com/blog/2014/10/28/adal-javascript-and-angularjs-deep-dive/\n\n### Trusted Site settings in IE\nIf you put your site in the trusted site list, cookies are not accessible for iFrame requests. You need to remove protected mode for Internet zone or add the authority url for the login to the trusted sites as well.\n\n### Known issues on Edge\nCertain issues have been reported when using ADAL.js with the Microsoft Edge version 40.15063.0.0. Please take a look at [this page](https://github.com/AzureAD/azure-activedirectory-library-for-js/wiki/Known-issues-on-Edge) for details and work arounds before filing a new issue.\n\n## We Value and Adhere to the Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n",
    "licenseText": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/adal-angular/-/adal-angular-1.0.16.tgz#e2bc31bc712aaffba053aa4dd46bc84eb5d2090f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/adal-angular/-/adal-angular-1.0.16.tgz",
    "hash": "e2bc31bc712aaffba053aa4dd46bc84eb5d2090f",
    "integrity": "sha1-4rwxvHEqr/ugU6pN1GvITrXSCQ8=",
    "registry": "npm",
    "packageName": "adal-angular",
    "cacheIntegrity": "sha512-tJf2bRwolKA8/J+wcy4CFOTAva8gpueHplptfjz3Wt1XOb7Y1jnwdm2VdkFZQUhxCtd/xPvcRSAQP2+ROtAD5g== sha1-4rwxvHEqr/ugU6pN1GvITrXSCQ8="
  },
  "registry": "npm",
  "hash": "e2bc31bc712aaffba053aa4dd46bc84eb5d2090f"
}