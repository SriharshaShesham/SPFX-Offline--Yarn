{
  "manifest": {
    "name": "git-repo-info",
    "version": "2.1.1",
    "description": "Retrieve current sha and branch name from a git repo.",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "scripts": {
      "test": "mocha tests"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/rwjblue/git-repo-info.git"
    },
    "keywords": [
      "git"
    ],
    "author": {
      "name": "Robert Jackson",
      "email": "me@rwjblue.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rwjblue/git-repo-info/issues"
    },
    "homepage": "https://github.com/rwjblue/git-repo-info",
    "devDependencies": {
      "mocha": "^4.1.0",
      "mocha-jshint": "^2.3.1"
    },
    "engines": {
      "node": ">= 4.0"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-git-repo-info-2.1.1-220ffed8cbae74ef8a80e3052f2ccb5179aed058-integrity\\node_modules\\git-repo-info\\package.json",
    "readmeFilename": "README.md",
    "readme": "## git-repo-info\n\nRetrieves repo information without relying on the `git` command.\n\n### Usage\n\n```javascript\nvar getRepoInfo = require('git-repo-info');\n\nvar info = getRepoInfo();\n\ninfo.branch               // current branch\ninfo.sha                  // current sha\ninfo.abbreviatedSha       // first 10 chars of the current sha\ninfo.tag                  // tag for the current sha (or `null` if no tag exists)\ninfo.lastTag              // tag for the closest tagged ancestor\n                          //   (or `null` if no ancestor is tagged)\ninfo.commitsSinceLastTag  // number of commits since the closest tagged ancestor\n                          //   (`0` if this commit is tagged, or `Infinity` if no ancestor is tagged)\ninfo.committer            // committer for the current sha\ninfo.committerDate        // commit date for the current sha\ninfo.author               // author for the current sha\ninfo.authorDate           // authored date for the current sha\ninfo.commitMessage        // commit message for the current sha\ninfo.root                 // root directory for the Git repo or submodule\n                          //   (if in a worktree, this is the directory containing the original copy)\ninfo.commonGitDir         // directory containing Git metadata for this repo or submodule\n                          //   (if in a worktree, this is the primary Git directory for the repo)\ninfo.worktreeGitDir       // if in a worktree, the directory containing Git metadata specific to\n                          //   this worktree; otherwise, this is the same as `commonGitDir`.\n```\n\nWhen called without any arguments, `git-repo-info` will automatically lookup upwards\ninto parent directories to find the first match with a `.git` folder.\n\nIf passed an argument, it will be assumed to be the path to the repo's `.git` folder\nto inspect.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/git-repo-info/-/git-repo-info-2.1.1.tgz#220ffed8cbae74ef8a80e3052f2ccb5179aed058",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/git-repo-info/-/git-repo-info-2.1.1.tgz",
    "hash": "220ffed8cbae74ef8a80e3052f2ccb5179aed058",
    "integrity": "sha512-8aCohiDo4jwjOwma4FmYFd3i97urZulL8XL24nIPxuE+GZnfsAyy/g2Shqx6OjUiFKUXZM+Yy+KHnOmmA3FVcg==",
    "registry": "npm",
    "packageName": "git-repo-info",
    "cacheIntegrity": "sha512-8aCohiDo4jwjOwma4FmYFd3i97urZulL8XL24nIPxuE+GZnfsAyy/g2Shqx6OjUiFKUXZM+Yy+KHnOmmA3FVcg== sha1-Ig/+2MuudO+KgOMFLyzLUXmu0Fg="
  },
  "registry": "npm",
  "hash": "220ffed8cbae74ef8a80e3052f2ccb5179aed058"
}