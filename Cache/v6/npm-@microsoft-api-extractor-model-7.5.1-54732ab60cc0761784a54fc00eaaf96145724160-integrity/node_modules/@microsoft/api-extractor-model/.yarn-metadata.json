{
  "manifest": {
    "name": "@microsoft/api-extractor-model",
    "version": "7.5.1",
    "description": "A helper library for loading and saving the .api.json files created by API Extractor",
    "repository": {
      "type": "git",
      "url": "https://github.com/microsoft/rushstack/tree/master/apps/api-extractor-model"
    },
    "homepage": "https://api-extractor.com/",
    "main": "lib/index.js",
    "typings": "dist/rollup.d.ts",
    "license": "MIT",
    "scripts": {
      "build": "gulp test --clean"
    },
    "dependencies": {
      "@microsoft/node-core-library": "3.15.1",
      "@microsoft/tsdoc": "0.12.14"
    },
    "devDependencies": {
      "@microsoft/node-library-build": "6.1.2",
      "@microsoft/rush-stack-compiler-3.4": "0.1.15",
      "@types/jest": "23.3.11",
      "@types/node": "8.10.54",
      "gulp": "~4.0.2",
      "tslint-microsoft-contrib": "~5.2.1"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-@microsoft-api-extractor-model-7.5.1-54732ab60cc0761784a54fc00eaaf96145724160-integrity\\node_modules\\@microsoft\\api-extractor-model\\package.json",
    "readmeFilename": "README.md",
    "readme": "# @microsoft/api-extractor-model\n\nUse this library to read and write *.api.json files as defined by the [API Extractor](https://api-extractor.com/) tool.\nThese files are used to generate a documentation website for your TypeScript package.  The files store the\nAPI signatures and doc comments that were extracted from your package.\n\nAPI documentation for this package: https://rushstack.io/pages/api/api-extractor-model/\n\n## Example Usage\n\nThe following code sample shows how to load `example.api.json`, which would be generated by API Extractor\nwhen it analyzes a hypothetical NPM package called `example`:\n\n```ts\nimport { ApiModel, ApiPackage } from '@microsoft/api-extractor-model';\n\nconst apiModel: ApiModel = new ApiModel();\nconst apiPackage: ApiPackage = apiModel.loadPackage('example.api.json');\n\nfor (const member of apiPackage.members) {\n  console.log(member.displayName);\n}\n```\n\nThe `ApiModel` is acts as a container for various packages that are loaded and operated on as a group.\nFor example, a documentation tool may need to resolve `@link` references across different packages.\nIn this case we would load the various packages into the `ApiModel`, and then use\nthe `ApiModel.resolveDeclarationReference()` to resolve the `@link` targets.\n\nThe data structure forms a tree of various classes that start with the `Api` prefix.  The nesting hierarchy\nmight look like this:\n\n```\n- ApiModel\n  - ApiPackage\n    - ApiEntryPoint\n      - ApiClass\n        - ApiMethod\n        - ApiProperty\n      - ApiEnum\n        - ApiEnumMember\n      - ApiInterface\n        - ApiMethodSignature\n        - ApiPropertySignature\n      - ApiNamespace\n        - (ApiClass, ApiEnum, ApiInterace, ...)\n```\n\nYou can use the `ApiItem.members` property to traverse this tree.\n\nNote that the non-abstract classes (e.g. `ApiClass`, `ApiEnum`, `ApiInterface`, etc.) use\nTypeScript \"mixin\" functions (e.g. `ApiDeclaredItem`, `ApiItemContainerMixin`, etc.) to add various\nfeatures that cannot be represented as a normal inheritance chain (since TypeScript does not allow a child class\nto extend more than one base class).  The \"mixin\" is a TypeScript merged declaration with three components:\nthe function that generates a subclass, an interface that describes the members of the subclass, and\na namespace containing static members of the class.\n\n> For a complete project that uses these APIs to generate an API reference web site,\n> see the [@microsoft/api-documenter](https://www.npmjs.com/package/@microsoft/api-documenter) source code.\n",
    "licenseText": "@microsoft/api-extractor\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@microsoft/api-extractor-model/-/api-extractor-model-7.5.1.tgz#54732ab60cc0761784a54fc00eaaf96145724160",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@microsoft/api-extractor-model/-/api-extractor-model-7.5.1.tgz",
    "hash": "54732ab60cc0761784a54fc00eaaf96145724160",
    "integrity": "sha512-qzgmJeoqpJqYDS1yj9YTPdd/+9OWGFwfzGFyr6kVarexomdPSltcoQYIS5JnrB/RFNeUgTNUlwn5mYdyp2Xv6A==",
    "registry": "npm",
    "packageName": "@microsoft/api-extractor-model",
    "cacheIntegrity": "sha512-qzgmJeoqpJqYDS1yj9YTPdd/+9OWGFwfzGFyr6kVarexomdPSltcoQYIS5JnrB/RFNeUgTNUlwn5mYdyp2Xv6A== sha1-VHMqtgzAdheEpU/ADqr5YUVyQWA="
  },
  "registry": "npm",
  "hash": "54732ab60cc0761784a54fc00eaaf96145724160"
}