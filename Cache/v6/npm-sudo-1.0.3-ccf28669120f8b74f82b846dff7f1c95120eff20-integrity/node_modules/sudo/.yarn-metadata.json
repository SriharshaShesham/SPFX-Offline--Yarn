{
  "manifest": {
    "author": {
      "name": "Jakob Borg",
      "email": "jakob@nym.se",
      "url": "http://nym.se/"
    },
    "name": "sudo",
    "description": "Wrap sudo with optional password cache",
    "version": "1.0.3",
    "homepage": "https://github.com/calmh/node-sudo",
    "repository": {
      "type": "git",
      "url": "git://github.com/calmh/node-sudo.git"
    },
    "main": "lib/sudo.js",
    "dependencies": {
      "inpath": "~1.0.2",
      "read": "~1.0.3",
      "pidof": "~1.0.2"
    },
    "devDependencies": {},
    "optionalDependencies": {},
    "engines": {
      "node": ">=0.8"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\SriharshaShesham\\AppData\\Local\\Yarn\\Cache\\v6\\npm-sudo-1.0.3-ccf28669120f8b74f82b846dff7f1c95120eff20-integrity\\node_modules\\sudo\\package.json",
    "readmeFilename": "README.md",
    "readme": "node-sudo\n=========\n\nA `child_process.spawn` but with `sudo` in between. The `sudo` password dialog\nis abstracted away so that the calling Node script can interact with the\nprogram that is run under `sudo` without worrying about it.\n\nSynopsis\n--------\n\n```javascript\nsudo(args, options)\n```\n\n - `args`: An array of arguments to `sudo`. Can be both options (such as `-v`\n   or `-E`) and the program to run. Example: `['ls']`.\n\n - `options`: An optional object containing options. Recognized options are:\n\n    - `cachePassword`: Boolean; whether to remember the password between\n      invocations or not.\n\n    - `prompt`: String; what to display to the user when the password is\n      needed.\n\n    - `spawnOptions`: Object; passed on directly to `spawn`. `stdio` or\n      `customFds` will be overwritten.\n\nExample\n-------\n\n```javascript\nvar sudo = require('sudo');\nvar options = {\n    cachePassword: true,\n    prompt: 'Password, yo? ',\n    spawnOptions: { /* other options for spawn */ }\n};\nvar child = sudo([ 'ls', '-l', '/tmp' ], options);\nchild.stdout.on('data', function (data) {\n    console.log(data.toString());\n});\n```\n\nLicense\n-------\n\nMIT\n",
    "licenseText": "Copyright (C) 2012 Jakob Borg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n- The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "license": "MIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/sudo/-/sudo-1.0.3.tgz#ccf28669120f8b74f82b846dff7f1c95120eff20",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/sudo/-/sudo-1.0.3.tgz",
    "hash": "ccf28669120f8b74f82b846dff7f1c95120eff20",
    "integrity": "sha1-zPKGaRIPi3T4K4Rt/38clRIO/yA=",
    "registry": "npm",
    "packageName": "sudo",
    "cacheIntegrity": "sha512-3xMsaPg+8Xm+4LQm0b2V+G3lz3YxtDBzlqiU8CXw2AOIIDSvC1kBxIxBjnoCTq8dTTXAy23m58g6mdClUocpmQ== sha1-zPKGaRIPi3T4K4Rt/38clRIO/yA="
  },
  "registry": "npm",
  "hash": "ccf28669120f8b74f82b846dff7f1c95120eff20"
}